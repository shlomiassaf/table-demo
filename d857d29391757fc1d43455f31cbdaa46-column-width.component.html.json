[{"file":"column-width.component.md","lang":"html","section":"ex-1","code":"  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">neg-table</span> [<span class=\"hljs-attr\">dataSource</span>]=<span class=\"hljs-string\">\"ds1\"</span> [<span class=\"hljs-attr\">columns</span>]=<span class=\"hljs-string\">\"columns1\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"height: 300px\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">neg-table</span>&gt;</span>"},{"file":"column-width.component.md","lang":"html","section":"ex-2","code":"  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">neg-table</span> [<span class=\"hljs-attr\">dataSource</span>]=<span class=\"hljs-string\">\"ds2\"</span> [<span class=\"hljs-attr\">columns</span>]=<span class=\"hljs-string\">\"columns2\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"height: 300px\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">neg-table</span>&gt;</span>"},{"file":"column-width.component.md","lang":"html","section":"ex-3","code":"  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">neg-table</span> [<span class=\"hljs-attr\">dataSource</span>]=<span class=\"hljs-string\">\"ds3\"</span> [<span class=\"hljs-attr\">columns</span>]=<span class=\"hljs-string\">\"columns3\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"height: 300px\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">neg-table</span>&gt;</span>"},{"file":"column-width.component.ts","lang":"ts","section":"ex-1","code":"<span class=\"hljs-keyword\">import</span> { ChangeDetectionStrategy, Component, ViewEncapsulation } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { createDS, columnFactory } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@neg/table'</span>;\n\n<span class=\"hljs-keyword\">import</span> { Person, DemoDataSource } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@neg/demo-apps/shared'</span>;\n\n<span class=\"hljs-meta\">@Component</span>({\n  selector: <span class=\"hljs-string\">'neg-column-width-table-example-component'</span>,\n  templateUrl: <span class=\"hljs-string\">'./column-width.component.html'</span>,\n  styleUrls: [<span class=\"hljs-string\">'./column-width.component.scss'</span>],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> ColumnWidthTableExampleComponent {\n\n  columns1 = columnFactory()\n    .table(\n      { prop: <span class=\"hljs-string\">'name'</span>, width: <span class=\"hljs-string\">'100px'</span> },\n      { prop: <span class=\"hljs-string\">'gender'</span>, width: <span class=\"hljs-string\">'50px'</span> },\n      { prop: <span class=\"hljs-string\">'birthdate'</span>, <span class=\"hljs-keyword\">type</span>: <span class=\"hljs-string\">'date'</span>, width: <span class=\"hljs-string\">'25%'</span> },\n      { prop: <span class=\"hljs-string\">'bio'</span> },\n    )\n    .build();\n  ds1 = createDS&lt;Person&gt;<span class=\"hljs-function\"><span class=\"hljs-params\">()</span>.<span class=\"hljs-params\">onTrigger</span>(<span class=\"hljs-params\"> (<span class=\"hljs-params\"></span>) =&gt; <span class=\"hljs-keyword\">this</span>.datasource.getPeople(<span class=\"hljs-params\">0, 5</span>) </span>).<span class=\"hljs-params\">create</span><span class=\"hljs-params\">()</span>;\n\n  <span class=\"hljs-params\">columns2</span> = <span class=\"hljs-params\">columnFactory</span><span class=\"hljs-params\">()</span>\n    .<span class=\"hljs-params\">table</span>(<span class=\"hljs-params\">\n      { prop: 'name', minWidth: 500 },\n      { prop: 'gender', minWidth: 500 },\n      { prop: 'birthdate', <span class=\"hljs-keyword\">type</span>: 'date', minWidth: 500 },\n      { prop: 'email', minWidth: 500 },\n    </span>)\n    .<span class=\"hljs-params\">build</span><span class=\"hljs-params\">()</span>;\n  <span class=\"hljs-params\">ds2</span> = <span class=\"hljs-params\">createDS</span>&lt;<span class=\"hljs-params\">Person</span>&gt;<span class=\"hljs-params\">()</span>.<span class=\"hljs-params\">onTrigger</span>(<span class=\"hljs-params\"> (<span class=\"hljs-params\"></span>) =&gt; <span class=\"hljs-keyword\">this</span>.datasource.getPeople(<span class=\"hljs-params\">0, 5</span>) </span>).<span class=\"hljs-params\">create</span><span class=\"hljs-params\">()</span>;\n\n  <span class=\"hljs-params\">columns3</span> = <span class=\"hljs-params\">columnFactory</span><span class=\"hljs-params\">()</span>\n    .<span class=\"hljs-params\">table</span>(<span class=\"hljs-params\">\n      { prop: 'name' },\n      { prop: 'gender', maxWidth: 50 },\n      { prop: 'birthdate', <span class=\"hljs-keyword\">type</span>: 'date', maxWidth: 100 },\n      { prop: 'bio', maxWidth: 500 },\n    </span>)\n    .<span class=\"hljs-params\">build</span><span class=\"hljs-params\">()</span>;\n  <span class=\"hljs-params\">ds3</span> = <span class=\"hljs-params\">createDS</span>&lt;<span class=\"hljs-params\">Person</span>&gt;<span class=\"hljs-params\">()</span>.<span class=\"hljs-params\">onTrigger</span>(<span class=\"hljs-params\"> (<span class=\"hljs-params\"></span>) =&gt; <span class=\"hljs-keyword\">this</span>.datasource.getPeople(<span class=\"hljs-params\">0, 5</span>) </span>).<span class=\"hljs-params\">create</span><span class=\"hljs-params\">()</span>;\n\n  <span class=\"hljs-params\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">private</span> datasource: DemoDataSource</span>) { }\n}</span>"},{"file":"column-width.component.ts","lang":"ts","section":"ex-2","code":"<span class=\"hljs-keyword\">import</span> { ChangeDetectionStrategy, Component, ViewEncapsulation } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { createDS, columnFactory } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@neg/table'</span>;\n\n<span class=\"hljs-keyword\">import</span> { Person, DemoDataSource } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@neg/demo-apps/shared'</span>;\n\n<span class=\"hljs-meta\">@Component</span>({\n  selector: <span class=\"hljs-string\">'neg-column-width-table-example-component'</span>,\n  templateUrl: <span class=\"hljs-string\">'./column-width.component.html'</span>,\n  styleUrls: [<span class=\"hljs-string\">'./column-width.component.scss'</span>],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> ColumnWidthTableExampleComponent {\n\n  columns1 = columnFactory()\n    .table(\n      { prop: <span class=\"hljs-string\">'name'</span>, width: <span class=\"hljs-string\">'100px'</span> },\n      { prop: <span class=\"hljs-string\">'gender'</span>, width: <span class=\"hljs-string\">'50px'</span> },\n      { prop: <span class=\"hljs-string\">'birthdate'</span>, <span class=\"hljs-keyword\">type</span>: <span class=\"hljs-string\">'date'</span>, width: <span class=\"hljs-string\">'25%'</span> },\n      { prop: <span class=\"hljs-string\">'bio'</span> },\n    )\n    .build();\n  ds1 = createDS&lt;Person&gt;<span class=\"hljs-function\"><span class=\"hljs-params\">()</span>.<span class=\"hljs-params\">onTrigger</span>(<span class=\"hljs-params\"> (<span class=\"hljs-params\"></span>) =&gt; <span class=\"hljs-keyword\">this</span>.datasource.getPeople(<span class=\"hljs-params\">0, 5</span>) </span>).<span class=\"hljs-params\">create</span><span class=\"hljs-params\">()</span>;\n\n  <span class=\"hljs-params\">columns2</span> = <span class=\"hljs-params\">columnFactory</span><span class=\"hljs-params\">()</span>\n    .<span class=\"hljs-params\">table</span>(<span class=\"hljs-params\">\n      { prop: 'name', minWidth: 500 },\n      { prop: 'gender', minWidth: 500 },\n      { prop: 'birthdate', <span class=\"hljs-keyword\">type</span>: 'date', minWidth: 500 },\n      { prop: 'email', minWidth: 500 },\n    </span>)\n    .<span class=\"hljs-params\">build</span><span class=\"hljs-params\">()</span>;\n  <span class=\"hljs-params\">ds2</span> = <span class=\"hljs-params\">createDS</span>&lt;<span class=\"hljs-params\">Person</span>&gt;<span class=\"hljs-params\">()</span>.<span class=\"hljs-params\">onTrigger</span>(<span class=\"hljs-params\"> (<span class=\"hljs-params\"></span>) =&gt; <span class=\"hljs-keyword\">this</span>.datasource.getPeople(<span class=\"hljs-params\">0, 5</span>) </span>).<span class=\"hljs-params\">create</span><span class=\"hljs-params\">()</span>;\n\n  <span class=\"hljs-params\">columns3</span> = <span class=\"hljs-params\">columnFactory</span><span class=\"hljs-params\">()</span>\n    .<span class=\"hljs-params\">table</span>(<span class=\"hljs-params\">\n      { prop: 'name' },\n      { prop: 'gender', maxWidth: 50 },\n      { prop: 'birthdate', <span class=\"hljs-keyword\">type</span>: 'date', maxWidth: 100 },\n      { prop: 'bio', maxWidth: 500 },\n    </span>)\n    .<span class=\"hljs-params\">build</span><span class=\"hljs-params\">()</span>;\n  <span class=\"hljs-params\">ds3</span> = <span class=\"hljs-params\">createDS</span>&lt;<span class=\"hljs-params\">Person</span>&gt;<span class=\"hljs-params\">()</span>.<span class=\"hljs-params\">onTrigger</span>(<span class=\"hljs-params\"> (<span class=\"hljs-params\"></span>) =&gt; <span class=\"hljs-keyword\">this</span>.datasource.getPeople(<span class=\"hljs-params\">0, 5</span>) </span>).<span class=\"hljs-params\">create</span><span class=\"hljs-params\">()</span>;\n\n  <span class=\"hljs-params\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">private</span> datasource: DemoDataSource</span>) { }\n}</span>"},{"file":"column-width.component.ts","lang":"ts","section":"ex-3","code":"<span class=\"hljs-keyword\">import</span> { ChangeDetectionStrategy, Component, ViewEncapsulation } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { createDS, columnFactory } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@neg/table'</span>;\n\n<span class=\"hljs-keyword\">import</span> { Person, DemoDataSource } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@neg/demo-apps/shared'</span>;\n\n<span class=\"hljs-meta\">@Component</span>({\n  selector: <span class=\"hljs-string\">'neg-column-width-table-example-component'</span>,\n  templateUrl: <span class=\"hljs-string\">'./column-width.component.html'</span>,\n  styleUrls: [<span class=\"hljs-string\">'./column-width.component.scss'</span>],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> ColumnWidthTableExampleComponent {\n\n  columns1 = columnFactory()\n    .table(\n      { prop: <span class=\"hljs-string\">'name'</span>, width: <span class=\"hljs-string\">'100px'</span> },\n      { prop: <span class=\"hljs-string\">'gender'</span>, width: <span class=\"hljs-string\">'50px'</span> },\n      { prop: <span class=\"hljs-string\">'birthdate'</span>, <span class=\"hljs-keyword\">type</span>: <span class=\"hljs-string\">'date'</span>, width: <span class=\"hljs-string\">'25%'</span> },\n      { prop: <span class=\"hljs-string\">'bio'</span> },\n    )\n    .build();\n  ds1 = createDS&lt;Person&gt;<span class=\"hljs-function\"><span class=\"hljs-params\">()</span>.<span class=\"hljs-params\">onTrigger</span>(<span class=\"hljs-params\"> (<span class=\"hljs-params\"></span>) =&gt; <span class=\"hljs-keyword\">this</span>.datasource.getPeople(<span class=\"hljs-params\">0, 5</span>) </span>).<span class=\"hljs-params\">create</span><span class=\"hljs-params\">()</span>;\n\n  <span class=\"hljs-params\">columns2</span> = <span class=\"hljs-params\">columnFactory</span><span class=\"hljs-params\">()</span>\n    .<span class=\"hljs-params\">table</span>(<span class=\"hljs-params\">\n      { prop: 'name', minWidth: 500 },\n      { prop: 'gender', minWidth: 500 },\n      { prop: 'birthdate', <span class=\"hljs-keyword\">type</span>: 'date', minWidth: 500 },\n      { prop: 'email', minWidth: 500 },\n    </span>)\n    .<span class=\"hljs-params\">build</span><span class=\"hljs-params\">()</span>;\n  <span class=\"hljs-params\">ds2</span> = <span class=\"hljs-params\">createDS</span>&lt;<span class=\"hljs-params\">Person</span>&gt;<span class=\"hljs-params\">()</span>.<span class=\"hljs-params\">onTrigger</span>(<span class=\"hljs-params\"> (<span class=\"hljs-params\"></span>) =&gt; <span class=\"hljs-keyword\">this</span>.datasource.getPeople(<span class=\"hljs-params\">0, 5</span>) </span>).<span class=\"hljs-params\">create</span><span class=\"hljs-params\">()</span>;\n\n  <span class=\"hljs-params\">columns3</span> = <span class=\"hljs-params\">columnFactory</span><span class=\"hljs-params\">()</span>\n    .<span class=\"hljs-params\">table</span>(<span class=\"hljs-params\">\n      { prop: 'name' },\n      { prop: 'gender', maxWidth: 50 },\n      { prop: 'birthdate', <span class=\"hljs-keyword\">type</span>: 'date', maxWidth: 100 },\n      { prop: 'bio', maxWidth: 500 },\n    </span>)\n    .<span class=\"hljs-params\">build</span><span class=\"hljs-params\">()</span>;\n  <span class=\"hljs-params\">ds3</span> = <span class=\"hljs-params\">createDS</span>&lt;<span class=\"hljs-params\">Person</span>&gt;<span class=\"hljs-params\">()</span>.<span class=\"hljs-params\">onTrigger</span>(<span class=\"hljs-params\"> (<span class=\"hljs-params\"></span>) =&gt; <span class=\"hljs-keyword\">this</span>.datasource.getPeople(<span class=\"hljs-params\">0, 5</span>) </span>).<span class=\"hljs-params\">create</span><span class=\"hljs-params\">()</span>;\n\n  <span class=\"hljs-params\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">private</span> datasource: DemoDataSource</span>) { }\n}</span>"}]
