[{"file":"paginator.component.md","lang":"html","section":"ex-1","code":"<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>neg-table</span> <span class=\"token attr-name\">usePagination</span>\n            <span class=\"token attr-name\">blockUi</span>\n            <span class=\"token attr-name\">[dataSource]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>clientSideDS<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">[columns]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>columns<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>neg-table-paginator</span> <span class=\"token attr-name\">*negTablePaginatorRef</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>let table<span class=\"token punctuation\">\"</span></span>\n                        <span class=\"token attr-name\">[table]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>table<span class=\"token punctuation\">\"</span></span>\n                        <span class=\"token attr-name\">[paginator]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>table.ds.paginator<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>neg-table-paginator</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>neg-table</span><span class=\"token punctuation\">></span></span></code></pre></div>"},{"file":"paginator.component.md","lang":"html","section":"ex-2","code":"<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>neg-table</span> <span class=\"token attr-name\">usePagination</span>\n            <span class=\"token attr-name\">blockUi</span>\n            <span class=\"token attr-name\">[dataSource]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>pageNumberDS<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">[columns]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>columns<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>neg-table-paginator</span> <span class=\"token attr-name\">*negTablePaginatorRef</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>let table<span class=\"token punctuation\">\"</span></span>\n                        <span class=\"token attr-name\">[table]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>table<span class=\"token punctuation\">\"</span></span>\n                        <span class=\"token attr-name\">[paginator]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>table.ds.paginator<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>neg-table-paginator</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>neg-table</span><span class=\"token punctuation\">></span></span></code></pre></div>"},{"file":"paginator.component.md","lang":"html","section":"ex-3","code":"<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>neg-table</span> <span class=\"token attr-name\">usePagination</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>token<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">blockUi</span>\n            <span class=\"token attr-name\">[dataSource]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>tokenDS<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">[columns]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>columns<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>neg-table-paginator</span> <span class=\"token attr-name\">*negTablePaginatorRef</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>let table<span class=\"token punctuation\">\"</span></span>\n                        <span class=\"token attr-name\">[table]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>table<span class=\"token punctuation\">\"</span></span>\n                        <span class=\"token attr-name\">[paginator]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>table.ds.paginator<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>neg-table-paginator</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>neg-table</span><span class=\"token punctuation\">></span></span></code></pre></div>"},{"file":"paginator.component.md","lang":"html","section":"ex-4","code":"<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>neg-table</span> <span class=\"token attr-name\">usePagination</span>\n            <span class=\"token attr-name\">blockUi</span>\n            <span class=\"token attr-name\">[dataSource]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>footerRowDS<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">[columns]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>columnsPaginatorAsFooter<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">[stickyFooter]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>[0]<span class=\"token punctuation\">\"</span></span><span class=\"token style-attr language-css\"><span class=\"token attr-name\">\n            <span class=\"token attr-name\">style</span></span><span class=\"token punctuation\">=\"</span><span class=\"token attr-value\"><span class=\"token property\">background</span><span class=\"token punctuation\">:</span> transparent</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">*negTableFooterCellTypeDef</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">'</span>PAGINATOR<span class=\"token punctuation\">'</span>; table as table<span class=\"token punctuation\">\"</span></span><span class=\"token style-attr language-css\"><span class=\"token attr-name\">\n        <span class=\"token attr-name\">style</span></span><span class=\"token punctuation\">=\"</span><span class=\"token attr-value\"><span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span> <span class=\"token property\">justify-content</span><span class=\"token punctuation\">:</span> flex-end<span class=\"token punctuation\">;</span> <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>neg-table-paginator</span> <span class=\"token attr-name\">[table]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>table<span class=\"token punctuation\">\"</span></span>\n                          <span class=\"token attr-name\">[paginator]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>table.ds.paginator<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>neg-table-paginator</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>neg-table</span><span class=\"token punctuation\">></span></span></code></pre></div>"},{"file":"paginator.component.ts","lang":"ts","section":"ex-1","code":"<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">as</span> rxFrom <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> map <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs/operators'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ChangeDetectionStrategy<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">,</span> ViewEncapsulation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createDS<span class=\"token punctuation\">,</span> columnFactory<span class=\"token punctuation\">,</span> NegTokenPaginator <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@neg/table'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Person<span class=\"token punctuation\">,</span> DemoDataSource <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@neg/demo-apps/shared'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">COLUMNS</span> <span class=\"token operator\">=</span> <span class=\"token function\">columnFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>minWidth<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span> prop<span class=\"token punctuation\">:</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> sort<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">:</span> <span class=\"token string\">'40px'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> prop<span class=\"token punctuation\">:</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> sort<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> prop<span class=\"token punctuation\">:</span> <span class=\"token string\">'gender'</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">:</span> <span class=\"token string\">'50px'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> prop<span class=\"token punctuation\">:</span> <span class=\"token string\">'birthdate'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'date'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">footer</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token string\">'PAGINATOR'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'PAGINATOR'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">emulateServerSidePageNumberPaginationCall</span><span class=\"token punctuation\">(</span>datasource<span class=\"token punctuation\">:</span> DemoDataSource<span class=\"token punctuation\">,</span> page<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> perPage<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">rxFrom</span><span class=\"token punctuation\">(</span>datasource<span class=\"token punctuation\">.</span><span class=\"token function\">getPeople</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span> data <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> start <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>page <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> perPage<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> end <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> start <span class=\"token operator\">+</span> perPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      total<span class=\"token punctuation\">:</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span>\n      data<span class=\"token punctuation\">:</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">emulateServerSideTokenPaginationCall</span><span class=\"token punctuation\">(</span>datasource<span class=\"token punctuation\">:</span> DemoDataSource<span class=\"token punctuation\">,</span> tokenOrPerPage<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createToken</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> perPage<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">btoa</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> page<span class=\"token punctuation\">,</span> perPage <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> tokenOrPerPage <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> instructions<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> page<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> perPage<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token function\">atob</span><span class=\"token punctuation\">(</span>tokenOrPerPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> page<span class=\"token punctuation\">,</span> perPage <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> instructions<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">emulateServerSidePageNumberPaginationCall</span><span class=\"token punctuation\">(</span>datasource<span class=\"token punctuation\">,</span> page<span class=\"token punctuation\">,</span> perPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">map</span><span class=\"token punctuation\">(</span> result <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> token<span class=\"token punctuation\">:</span> <span class=\"token function\">createToken</span><span class=\"token punctuation\">(</span>page <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> perPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">:</span> result<span class=\"token punctuation\">.</span>data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> token <span class=\"token operator\">=</span> <span class=\"token function\">createToken</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> tokenOrPerPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">emulateServerSidePageNumberPaginationCall</span><span class=\"token punctuation\">(</span>datasource<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> tokenOrPerPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">map</span><span class=\"token punctuation\">(</span> result <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> token<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">:</span> result<span class=\"token punctuation\">.</span>data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  selector<span class=\"token punctuation\">:</span> <span class=\"token string\">'neg-paginator-table-example-component'</span><span class=\"token punctuation\">,</span>\n  templateUrl<span class=\"token punctuation\">:</span> <span class=\"token string\">'./paginator.component.html'</span><span class=\"token punctuation\">,</span>\n  styleUrls<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./paginator.component.scss'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  encapsulation<span class=\"token punctuation\">:</span> ViewEncapsulation<span class=\"token punctuation\">.</span>None<span class=\"token punctuation\">,</span>\n  changeDetection<span class=\"token punctuation\">:</span> ChangeDetectionStrategy<span class=\"token punctuation\">.</span>OnPush\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PaginatorTableExampleComponent</span> <span class=\"token punctuation\">{</span>\n\n  columns <span class=\"token operator\">=</span> <span class=\"token function\">columnFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token constant\">COLUMNS</span><span class=\"token punctuation\">.</span>table<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  columnsPaginatorAsFooter <span class=\"token operator\">=</span> <span class=\"token constant\">COLUMNS</span><span class=\"token punctuation\">;</span>\n  clientSideDS <span class=\"token operator\">=</span> createDS<span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onTrigger</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>datasource<span class=\"token punctuation\">.</span><span class=\"token function\">getPeople</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  pageNumberDS <span class=\"token operator\">=</span> createDS<span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onTrigger</span><span class=\"token punctuation\">(</span> event <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> page<span class=\"token punctuation\">,</span> perPage <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pageNumberDS<span class=\"token punctuation\">.</span>paginator<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// emulate HTTP call with server side pagination instructions</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">emulateServerSidePageNumberPaginationCall</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>datasource<span class=\"token punctuation\">,</span> page<span class=\"token punctuation\">,</span> perPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">map</span><span class=\"token punctuation\">(</span> result <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        event<span class=\"token punctuation\">.</span><span class=\"token function\">updateTotalLength</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">setCustomTriggers</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pagination'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  tokenDS <span class=\"token operator\">=</span> createDS<span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onTrigger</span><span class=\"token punctuation\">(</span> event <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> pagination <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> event<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">let</span> pageChanged<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pagination<span class=\"token punctuation\">.</span>page<span class=\"token punctuation\">.</span>changed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        pageChanged <span class=\"token operator\">=</span> pagination<span class=\"token punctuation\">.</span>page<span class=\"token punctuation\">.</span>curr<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>pageChanged<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tokenDS<span class=\"token punctuation\">.</span>paginator<span class=\"token punctuation\">.</span><span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> perPage <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tokenDS<span class=\"token punctuation\">.</span>paginator<span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// emulate HTTP call with server side pagination instructions</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">emulateServerSideTokenPaginationCall</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>datasource<span class=\"token punctuation\">,</span> pageChanged <span class=\"token operator\">||</span> perPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n        <span class=\"token function\">map</span><span class=\"token punctuation\">(</span> result <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">const</span> paginator<span class=\"token punctuation\">:</span> NegTokenPaginator <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tokenDS<span class=\"token punctuation\">.</span>paginator<span class=\"token punctuation\">;</span>\n            paginator<span class=\"token punctuation\">.</span><span class=\"token function\">addNext</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n          event<span class=\"token punctuation\">.</span><span class=\"token function\">updateTotalLength</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setCustomTriggers</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pagination'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  footerRowDS <span class=\"token operator\">=</span> createDS<span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onTrigger</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>datasource<span class=\"token punctuation\">.</span><span class=\"token function\">getPeople</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> datasource<span class=\"token punctuation\">:</span> DemoDataSource<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"},{"file":"paginator.component.ts","lang":"ts","section":"ex-2","code":"<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">as</span> rxFrom <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> map <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs/operators'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ChangeDetectionStrategy<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">,</span> ViewEncapsulation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createDS<span class=\"token punctuation\">,</span> columnFactory<span class=\"token punctuation\">,</span> NegTokenPaginator <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@neg/table'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Person<span class=\"token punctuation\">,</span> DemoDataSource <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@neg/demo-apps/shared'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">COLUMNS</span> <span class=\"token operator\">=</span> <span class=\"token function\">columnFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>minWidth<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span> prop<span class=\"token punctuation\">:</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> sort<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">:</span> <span class=\"token string\">'40px'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> prop<span class=\"token punctuation\">:</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> sort<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> prop<span class=\"token punctuation\">:</span> <span class=\"token string\">'gender'</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">:</span> <span class=\"token string\">'50px'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> prop<span class=\"token punctuation\">:</span> <span class=\"token string\">'birthdate'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'date'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">footer</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token string\">'PAGINATOR'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'PAGINATOR'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">emulateServerSidePageNumberPaginationCall</span><span class=\"token punctuation\">(</span>datasource<span class=\"token punctuation\">:</span> DemoDataSource<span class=\"token punctuation\">,</span> page<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> perPage<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">rxFrom</span><span class=\"token punctuation\">(</span>datasource<span class=\"token punctuation\">.</span><span class=\"token function\">getPeople</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span> data <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> start <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>page <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> perPage<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> end <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> start <span class=\"token operator\">+</span> perPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      total<span class=\"token punctuation\">:</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span>\n      data<span class=\"token punctuation\">:</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">emulateServerSideTokenPaginationCall</span><span class=\"token punctuation\">(</span>datasource<span class=\"token punctuation\">:</span> DemoDataSource<span class=\"token punctuation\">,</span> tokenOrPerPage<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createToken</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> perPage<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">btoa</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> page<span class=\"token punctuation\">,</span> perPage <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> tokenOrPerPage <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> instructions<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> page<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> perPage<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token function\">atob</span><span class=\"token punctuation\">(</span>tokenOrPerPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> page<span class=\"token punctuation\">,</span> perPage <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> instructions<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">emulateServerSidePageNumberPaginationCall</span><span class=\"token punctuation\">(</span>datasource<span class=\"token punctuation\">,</span> page<span class=\"token punctuation\">,</span> perPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">map</span><span class=\"token punctuation\">(</span> result <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> token<span class=\"token punctuation\">:</span> <span class=\"token function\">createToken</span><span class=\"token punctuation\">(</span>page <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> perPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">:</span> result<span class=\"token punctuation\">.</span>data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> token <span class=\"token operator\">=</span> <span class=\"token function\">createToken</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> tokenOrPerPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">emulateServerSidePageNumberPaginationCall</span><span class=\"token punctuation\">(</span>datasource<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> tokenOrPerPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">map</span><span class=\"token punctuation\">(</span> result <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> token<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">:</span> result<span class=\"token punctuation\">.</span>data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  selector<span class=\"token punctuation\">:</span> <span class=\"token string\">'neg-paginator-table-example-component'</span><span class=\"token punctuation\">,</span>\n  templateUrl<span class=\"token punctuation\">:</span> <span class=\"token string\">'./paginator.component.html'</span><span class=\"token punctuation\">,</span>\n  styleUrls<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./paginator.component.scss'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  encapsulation<span class=\"token punctuation\">:</span> ViewEncapsulation<span class=\"token punctuation\">.</span>None<span class=\"token punctuation\">,</span>\n  changeDetection<span class=\"token punctuation\">:</span> ChangeDetectionStrategy<span class=\"token punctuation\">.</span>OnPush\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PaginatorTableExampleComponent</span> <span class=\"token punctuation\">{</span>\n\n  columns <span class=\"token operator\">=</span> <span class=\"token function\">columnFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token constant\">COLUMNS</span><span class=\"token punctuation\">.</span>table<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  columnsPaginatorAsFooter <span class=\"token operator\">=</span> <span class=\"token constant\">COLUMNS</span><span class=\"token punctuation\">;</span>\n  clientSideDS <span class=\"token operator\">=</span> createDS<span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onTrigger</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>datasource<span class=\"token punctuation\">.</span><span class=\"token function\">getPeople</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  pageNumberDS <span class=\"token operator\">=</span> createDS<span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onTrigger</span><span class=\"token punctuation\">(</span> event <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> page<span class=\"token punctuation\">,</span> perPage <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pageNumberDS<span class=\"token punctuation\">.</span>paginator<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// emulate HTTP call with server side pagination instructions</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">emulateServerSidePageNumberPaginationCall</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>datasource<span class=\"token punctuation\">,</span> page<span class=\"token punctuation\">,</span> perPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">map</span><span class=\"token punctuation\">(</span> result <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        event<span class=\"token punctuation\">.</span><span class=\"token function\">updateTotalLength</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">setCustomTriggers</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pagination'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  tokenDS <span class=\"token operator\">=</span> createDS<span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onTrigger</span><span class=\"token punctuation\">(</span> event <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> pagination <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> event<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">let</span> pageChanged<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pagination<span class=\"token punctuation\">.</span>page<span class=\"token punctuation\">.</span>changed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        pageChanged <span class=\"token operator\">=</span> pagination<span class=\"token punctuation\">.</span>page<span class=\"token punctuation\">.</span>curr<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>pageChanged<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tokenDS<span class=\"token punctuation\">.</span>paginator<span class=\"token punctuation\">.</span><span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> perPage <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tokenDS<span class=\"token punctuation\">.</span>paginator<span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// emulate HTTP call with server side pagination instructions</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">emulateServerSideTokenPaginationCall</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>datasource<span class=\"token punctuation\">,</span> pageChanged <span class=\"token operator\">||</span> perPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n        <span class=\"token function\">map</span><span class=\"token punctuation\">(</span> result <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">const</span> paginator<span class=\"token punctuation\">:</span> NegTokenPaginator <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tokenDS<span class=\"token punctuation\">.</span>paginator<span class=\"token punctuation\">;</span>\n            paginator<span class=\"token punctuation\">.</span><span class=\"token function\">addNext</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n          event<span class=\"token punctuation\">.</span><span class=\"token function\">updateTotalLength</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setCustomTriggers</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pagination'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  footerRowDS <span class=\"token operator\">=</span> createDS<span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onTrigger</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>datasource<span class=\"token punctuation\">.</span><span class=\"token function\">getPeople</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> datasource<span class=\"token punctuation\">:</span> DemoDataSource<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"},{"file":"paginator.component.ts","lang":"ts","section":"ex-3","code":"<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">as</span> rxFrom <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> map <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs/operators'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ChangeDetectionStrategy<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">,</span> ViewEncapsulation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createDS<span class=\"token punctuation\">,</span> columnFactory<span class=\"token punctuation\">,</span> NegTokenPaginator <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@neg/table'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Person<span class=\"token punctuation\">,</span> DemoDataSource <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@neg/demo-apps/shared'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">COLUMNS</span> <span class=\"token operator\">=</span> <span class=\"token function\">columnFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>minWidth<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span> prop<span class=\"token punctuation\">:</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> sort<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">:</span> <span class=\"token string\">'40px'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> prop<span class=\"token punctuation\">:</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> sort<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> prop<span class=\"token punctuation\">:</span> <span class=\"token string\">'gender'</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">:</span> <span class=\"token string\">'50px'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> prop<span class=\"token punctuation\">:</span> <span class=\"token string\">'birthdate'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'date'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">footer</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token string\">'PAGINATOR'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'PAGINATOR'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">emulateServerSidePageNumberPaginationCall</span><span class=\"token punctuation\">(</span>datasource<span class=\"token punctuation\">:</span> DemoDataSource<span class=\"token punctuation\">,</span> page<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> perPage<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">rxFrom</span><span class=\"token punctuation\">(</span>datasource<span class=\"token punctuation\">.</span><span class=\"token function\">getPeople</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span> data <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> start <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>page <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> perPage<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> end <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> start <span class=\"token operator\">+</span> perPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      total<span class=\"token punctuation\">:</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span>\n      data<span class=\"token punctuation\">:</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">emulateServerSideTokenPaginationCall</span><span class=\"token punctuation\">(</span>datasource<span class=\"token punctuation\">:</span> DemoDataSource<span class=\"token punctuation\">,</span> tokenOrPerPage<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createToken</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> perPage<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">btoa</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> page<span class=\"token punctuation\">,</span> perPage <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> tokenOrPerPage <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> instructions<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> page<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> perPage<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token function\">atob</span><span class=\"token punctuation\">(</span>tokenOrPerPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> page<span class=\"token punctuation\">,</span> perPage <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> instructions<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">emulateServerSidePageNumberPaginationCall</span><span class=\"token punctuation\">(</span>datasource<span class=\"token punctuation\">,</span> page<span class=\"token punctuation\">,</span> perPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">map</span><span class=\"token punctuation\">(</span> result <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> token<span class=\"token punctuation\">:</span> <span class=\"token function\">createToken</span><span class=\"token punctuation\">(</span>page <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> perPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">:</span> result<span class=\"token punctuation\">.</span>data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> token <span class=\"token operator\">=</span> <span class=\"token function\">createToken</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> tokenOrPerPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">emulateServerSidePageNumberPaginationCall</span><span class=\"token punctuation\">(</span>datasource<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> tokenOrPerPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">map</span><span class=\"token punctuation\">(</span> result <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> token<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">:</span> result<span class=\"token punctuation\">.</span>data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  selector<span class=\"token punctuation\">:</span> <span class=\"token string\">'neg-paginator-table-example-component'</span><span class=\"token punctuation\">,</span>\n  templateUrl<span class=\"token punctuation\">:</span> <span class=\"token string\">'./paginator.component.html'</span><span class=\"token punctuation\">,</span>\n  styleUrls<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./paginator.component.scss'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  encapsulation<span class=\"token punctuation\">:</span> ViewEncapsulation<span class=\"token punctuation\">.</span>None<span class=\"token punctuation\">,</span>\n  changeDetection<span class=\"token punctuation\">:</span> ChangeDetectionStrategy<span class=\"token punctuation\">.</span>OnPush\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PaginatorTableExampleComponent</span> <span class=\"token punctuation\">{</span>\n\n  columns <span class=\"token operator\">=</span> <span class=\"token function\">columnFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token constant\">COLUMNS</span><span class=\"token punctuation\">.</span>table<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  columnsPaginatorAsFooter <span class=\"token operator\">=</span> <span class=\"token constant\">COLUMNS</span><span class=\"token punctuation\">;</span>\n  clientSideDS <span class=\"token operator\">=</span> createDS<span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onTrigger</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>datasource<span class=\"token punctuation\">.</span><span class=\"token function\">getPeople</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  pageNumberDS <span class=\"token operator\">=</span> createDS<span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onTrigger</span><span class=\"token punctuation\">(</span> event <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> page<span class=\"token punctuation\">,</span> perPage <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pageNumberDS<span class=\"token punctuation\">.</span>paginator<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// emulate HTTP call with server side pagination instructions</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">emulateServerSidePageNumberPaginationCall</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>datasource<span class=\"token punctuation\">,</span> page<span class=\"token punctuation\">,</span> perPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">map</span><span class=\"token punctuation\">(</span> result <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        event<span class=\"token punctuation\">.</span><span class=\"token function\">updateTotalLength</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">setCustomTriggers</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pagination'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  tokenDS <span class=\"token operator\">=</span> createDS<span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onTrigger</span><span class=\"token punctuation\">(</span> event <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> pagination <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> event<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">let</span> pageChanged<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pagination<span class=\"token punctuation\">.</span>page<span class=\"token punctuation\">.</span>changed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        pageChanged <span class=\"token operator\">=</span> pagination<span class=\"token punctuation\">.</span>page<span class=\"token punctuation\">.</span>curr<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>pageChanged<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tokenDS<span class=\"token punctuation\">.</span>paginator<span class=\"token punctuation\">.</span><span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> perPage <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tokenDS<span class=\"token punctuation\">.</span>paginator<span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// emulate HTTP call with server side pagination instructions</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">emulateServerSideTokenPaginationCall</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>datasource<span class=\"token punctuation\">,</span> pageChanged <span class=\"token operator\">||</span> perPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n        <span class=\"token function\">map</span><span class=\"token punctuation\">(</span> result <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">const</span> paginator<span class=\"token punctuation\">:</span> NegTokenPaginator <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tokenDS<span class=\"token punctuation\">.</span>paginator<span class=\"token punctuation\">;</span>\n            paginator<span class=\"token punctuation\">.</span><span class=\"token function\">addNext</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n          event<span class=\"token punctuation\">.</span><span class=\"token function\">updateTotalLength</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setCustomTriggers</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pagination'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  footerRowDS <span class=\"token operator\">=</span> createDS<span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onTrigger</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>datasource<span class=\"token punctuation\">.</span><span class=\"token function\">getPeople</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> datasource<span class=\"token punctuation\">:</span> DemoDataSource<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"},{"file":"paginator.component.ts","lang":"ts","section":"ex-4","code":"<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">as</span> rxFrom <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> map <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs/operators'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ChangeDetectionStrategy<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">,</span> ViewEncapsulation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createDS<span class=\"token punctuation\">,</span> columnFactory<span class=\"token punctuation\">,</span> NegTokenPaginator <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@neg/table'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Person<span class=\"token punctuation\">,</span> DemoDataSource <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@neg/demo-apps/shared'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">COLUMNS</span> <span class=\"token operator\">=</span> <span class=\"token function\">columnFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>minWidth<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span> prop<span class=\"token punctuation\">:</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> sort<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">:</span> <span class=\"token string\">'40px'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> prop<span class=\"token punctuation\">:</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> sort<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> prop<span class=\"token punctuation\">:</span> <span class=\"token string\">'gender'</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">:</span> <span class=\"token string\">'50px'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> prop<span class=\"token punctuation\">:</span> <span class=\"token string\">'birthdate'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'date'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">footer</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token string\">'PAGINATOR'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'PAGINATOR'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">emulateServerSidePageNumberPaginationCall</span><span class=\"token punctuation\">(</span>datasource<span class=\"token punctuation\">:</span> DemoDataSource<span class=\"token punctuation\">,</span> page<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> perPage<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">rxFrom</span><span class=\"token punctuation\">(</span>datasource<span class=\"token punctuation\">.</span><span class=\"token function\">getPeople</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span> data <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> start <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>page <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> perPage<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> end <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> start <span class=\"token operator\">+</span> perPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      total<span class=\"token punctuation\">:</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span>\n      data<span class=\"token punctuation\">:</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">emulateServerSideTokenPaginationCall</span><span class=\"token punctuation\">(</span>datasource<span class=\"token punctuation\">:</span> DemoDataSource<span class=\"token punctuation\">,</span> tokenOrPerPage<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createToken</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> perPage<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">btoa</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> page<span class=\"token punctuation\">,</span> perPage <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> tokenOrPerPage <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> instructions<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> page<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> perPage<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token function\">atob</span><span class=\"token punctuation\">(</span>tokenOrPerPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> page<span class=\"token punctuation\">,</span> perPage <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> instructions<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">emulateServerSidePageNumberPaginationCall</span><span class=\"token punctuation\">(</span>datasource<span class=\"token punctuation\">,</span> page<span class=\"token punctuation\">,</span> perPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">map</span><span class=\"token punctuation\">(</span> result <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> token<span class=\"token punctuation\">:</span> <span class=\"token function\">createToken</span><span class=\"token punctuation\">(</span>page <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> perPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">:</span> result<span class=\"token punctuation\">.</span>data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> token <span class=\"token operator\">=</span> <span class=\"token function\">createToken</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> tokenOrPerPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">emulateServerSidePageNumberPaginationCall</span><span class=\"token punctuation\">(</span>datasource<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> tokenOrPerPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">map</span><span class=\"token punctuation\">(</span> result <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> token<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">:</span> result<span class=\"token punctuation\">.</span>data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  selector<span class=\"token punctuation\">:</span> <span class=\"token string\">'neg-paginator-table-example-component'</span><span class=\"token punctuation\">,</span>\n  templateUrl<span class=\"token punctuation\">:</span> <span class=\"token string\">'./paginator.component.html'</span><span class=\"token punctuation\">,</span>\n  styleUrls<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./paginator.component.scss'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  encapsulation<span class=\"token punctuation\">:</span> ViewEncapsulation<span class=\"token punctuation\">.</span>None<span class=\"token punctuation\">,</span>\n  changeDetection<span class=\"token punctuation\">:</span> ChangeDetectionStrategy<span class=\"token punctuation\">.</span>OnPush\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PaginatorTableExampleComponent</span> <span class=\"token punctuation\">{</span>\n\n  columns <span class=\"token operator\">=</span> <span class=\"token function\">columnFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token constant\">COLUMNS</span><span class=\"token punctuation\">.</span>table<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  columnsPaginatorAsFooter <span class=\"token operator\">=</span> <span class=\"token constant\">COLUMNS</span><span class=\"token punctuation\">;</span>\n  clientSideDS <span class=\"token operator\">=</span> createDS<span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onTrigger</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>datasource<span class=\"token punctuation\">.</span><span class=\"token function\">getPeople</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  pageNumberDS <span class=\"token operator\">=</span> createDS<span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onTrigger</span><span class=\"token punctuation\">(</span> event <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> page<span class=\"token punctuation\">,</span> perPage <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pageNumberDS<span class=\"token punctuation\">.</span>paginator<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// emulate HTTP call with server side pagination instructions</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">emulateServerSidePageNumberPaginationCall</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>datasource<span class=\"token punctuation\">,</span> page<span class=\"token punctuation\">,</span> perPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">map</span><span class=\"token punctuation\">(</span> result <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        event<span class=\"token punctuation\">.</span><span class=\"token function\">updateTotalLength</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">setCustomTriggers</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pagination'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  tokenDS <span class=\"token operator\">=</span> createDS<span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onTrigger</span><span class=\"token punctuation\">(</span> event <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> pagination <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> event<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">let</span> pageChanged<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pagination<span class=\"token punctuation\">.</span>page<span class=\"token punctuation\">.</span>changed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        pageChanged <span class=\"token operator\">=</span> pagination<span class=\"token punctuation\">.</span>page<span class=\"token punctuation\">.</span>curr<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>pageChanged<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tokenDS<span class=\"token punctuation\">.</span>paginator<span class=\"token punctuation\">.</span><span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> perPage <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tokenDS<span class=\"token punctuation\">.</span>paginator<span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// emulate HTTP call with server side pagination instructions</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">emulateServerSideTokenPaginationCall</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>datasource<span class=\"token punctuation\">,</span> pageChanged <span class=\"token operator\">||</span> perPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n        <span class=\"token function\">map</span><span class=\"token punctuation\">(</span> result <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">const</span> paginator<span class=\"token punctuation\">:</span> NegTokenPaginator <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tokenDS<span class=\"token punctuation\">.</span>paginator<span class=\"token punctuation\">;</span>\n            paginator<span class=\"token punctuation\">.</span><span class=\"token function\">addNext</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n          event<span class=\"token punctuation\">.</span><span class=\"token function\">updateTotalLength</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setCustomTriggers</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pagination'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  footerRowDS <span class=\"token operator\">=</span> createDS<span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onTrigger</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>datasource<span class=\"token punctuation\">.</span><span class=\"token function\">getPeople</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> datasource<span class=\"token punctuation\">:</span> DemoDataSource<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>"}]
